name: 'Build & Deploy to EKS'

on:
  push:
    branches:
      - 'release-*'

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: hello-world/hello-world-nestjs
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.27.0' # default is latest stable
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.SHORT_SHA }} .
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.SHORT_SHA }}
          
      - name: Set EKS context for kubectl
        run: aws eks update-kubeconfig --name demo-ekscluster

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          export IMAGE_TAG=${{ env.SHORT_SHA }}
          envsubst < k8s/kustomization.tmpl.yaml > k8s/kustomization.yaml
          sed -i 's|<MONGODB_URI>|${{ secrets.MONGODB_URI }}|' k8s/deployment.yaml
          kubectl kustomize k8s | kubectl apply -f -